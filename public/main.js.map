{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Services/auth.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport {tokenNotExpired} from 'angular2-jwt'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http:HttpClient) { }\n\n  registerUser(user){\n    let headers = new HttpHeaders({'Content-Type': 'application/json'})\n    return this.http.post(`/users/register`, user, {headers:headers})\n  }\n\n  authenticateUser(user){\n    let headers = new HttpHeaders({'Content-Type': 'application/json'})\n    return this.http.post(`/users/authenticate`, user, {headers:headers})\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token)\n    localStorage.setItem('user', JSON.stringify(user))\n    this.authToken = token;\n    this.user = user;\n  }\n\n  //getPofile(){\n    //let headers = new HttpHeaders();\n    //this.loadToken();\n    //console.log('Bearer '+this.authToken)\n    //headers.set('Authorization', 'Bearer '+ this.authToken).set('Content-Type', 'application/json')\n    //return this.http.get(`${this.url}/users/profile`, {headers:headers})\n  //}\n\n  getProfile(){\n    this.loadToken()\n    let headers = new HttpHeaders({'Content-Type': 'application/json','Authorization': 'Bearer ' + this.authToken})\n    return this.http.get(`/users/profile`, {headers:headers})\n  }\n\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token\n  }\n\n  loggedIn(){\n    return tokenNotExpired('id_token')\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<mat-toolbar><app-navbar></app-navbar></mat-toolbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MatToolbarModule, MatInputModule, MatButtonModule, MatListModule, MatGridListModule, MatSelectModule, MatMenuModule, MatIconModule, MatSidenavModule, MatFormFieldModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material';\nimport { MatCommonModule } from '@angular/material/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport {ValidateService} from './services/validate.service'\nimport {AuthService} from './services/auth.service'\nimport {AuthGuard} from './guards/auth.guard'\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    MatCardModule,\n    MatToolbarModule, MatMenuModule,MatFormFieldModule,MatSelectModule,MatInputModule, MatGridListModule,\n    MatCommonModule,MatButtonModule, MatListModule, MatIconModule, MatSidenavModule\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".grid-container {  \\r\\n  margin: 20px;  \\r\\n}  \\r\\n  \\r\\n.dashboard-card {  \\r\\n  position: absolute;  \\r\\n  top: 15px;  \\r\\n  left: 15px;  \\r\\n  right: 15px;  \\r\\n  bottom: 15px;  \\r\\n}  \\r\\n  \\r\\n.more-button {  \\r\\n  position: absolute;  \\r\\n  top: 5px;  \\r\\n  right: 10px;  \\r\\n}  \\r\\n  \\r\\n.dashboard-card-content {  \\r\\n  text-align: center;  \\r\\n}  \"","module.exports = \"<div class=\\\"grid-container\\\">  \\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>  \\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">  \\n    <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">  \\n      <mat-card class=\\\"dashboard-card\\\">  \\n        <mat-card-header>  \\n          <mat-card-title>  \\n            {{card.title}}  \\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">  \\n              <mat-icon>more_vert</mat-icon>  \\n            </button>  \\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">  \\n              <button mat-menu-item>Expand</button>  \\n              <button mat-menu-item>Remove</button>  \\n            </mat-menu>  \\n          </mat-card-title>  \\n        </mat-card-header>  \\n        <mat-card-content class=\\\"dashboard-card-content\\\">  \\n          <div>Card Content Here</div>  \\n        </mat-card-content>  \\n      </mat-card>  \\n    </mat-grid-tile>  \\n  </mat-grid-list>  \\n</div>  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  cards = [  \n    { title: 'Card 1', cols: 2, rows: 1 },  \n    { title: 'Card 2', cols: 1, rows: 1 },  \n    { title: 'Card 3', cols: 1, rows: 2 },  \n    { title: 'Card 4', cols: 1, rows: 1 }  \n  ]; \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN Authentication App</h1>\\n  <p class=\\\"lead\\\">Welcome to our custom MEAN authentication application built from scratch </p>\\n  <div>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> <a class=\\\"btn btn-dark\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Express Backend</h3>\\n    <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Angular-CLI</h3>\\n    <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>JWT Tokens</h3>\\n    <p>Full featured authentication using JSON web tokens. Login and store user data</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  max-width: 400px;\\r\\n  margin: 2em auto;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.signin-content {\\r\\n  padding: 60px 1rem;\\r\\n}\\r\\n\\r\\n.full-width-input {\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<mat-card class=\\\"mat-card\\\">\\n<form>\\n  <h3>Login</h3>\\n  <div class=\\\"example-container\\\">\\n  <mat-form-field>\\n    <input matInput name=\\\"username\\\" placeholder=\\\"name\\\" [(ngModel)]=\\\"username\\\" ngControl=\\\"username\\\" required>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput name=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"password\\\" ngControl=\\\"password\\\" required [type]=\\\"hide ? 'password' : 'text'\\\">\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n  </mat-form-field>\\n</div>\\n</form>\\n<button mat-button color=\\\"primary\\\" (click)=\\\"onLoginSubmit()\\\" type=\\\"button\\\">Submit</button>\\n<div><h5>Don't have an Account?</h5>\\n<button mat-button color=\\\"primary\\\" [routerLink]=\\\"['/register']\\\" type=\\\"button\\\">Register Here</button>\\n</div>\\n</mat-card>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  hide = true;\n  constructor(private authService: AuthService, \n              private toastr: ToastrService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n  \n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data['success']){\n        this.authService.storeUserData(data['token'], data['user'])\n        this.toastr.success('Have fun!', 'Login Successful', {timeOut: 3000})\n        this.router.navigate(['/dashboard'])\n      }\n      else {\n        this.toastr.error(data['msg'], 'Login Failed', {timeOut: 3000})\n        this.router.navigate(['/login'])\n      }\n    })\n    \n  }\n} \n\n    ","module.exports = \".fill-remaining-space {\\r\\n      flex: 1 1 auto;\\r\\n      color: green\\r\\n    }\"","module.exports = \"<mat-toolbar>\\n\\n<span>\\n  <h3>MEAN APP</h3>\\n</span>\\n<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n  <mat-icon>more_vert</mat-icon>\\n</button>\\n<mat-menu #menu=\\\"matMenu\\\">\\n  <button mat-menu-item [routerLink]=\\\"['']\\\">\\n    <mat-icon>home</mat-icon>\\n    <span>Home</span>\\n  </button>\\n  <button *ngIf=\\\"authService.loggedIn()\\\" mat-menu-item [routerLink]=\\\"['/dashboard']\\\">\\n    <mat-icon>dialpad</mat-icon>\\n    <span>Dashboard</span>\\n  </button>\\n  <button *ngIf=\\\"authService.loggedIn()\\\" mat-menu-item [routerLink]=\\\"['/profile']\\\">\\n    <mat-icon>person</mat-icon>\\n    <span>Profile</span>\\n  </button>\\n</mat-menu>\\n<span class=\\\"fill-remaining-space\\\"></span>\\n  <button *ngIf=\\\"!authService.loggedIn()\\\" mat-button [routerLink]=\\\"['/register']\\\"><mat-icon>person_add</mat-icon><span>Register</span></button>\\n  <button *ngIf=\\\"!authService.loggedIn()\\\" mat-button [routerLink]=\\\"['/login']\\\"><mat-icon>input</mat-icon><span>Login</span></button>\\n  <button *ngIf=\\\"authService.loggedIn()\\\" mat-button (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\"><mat-icon>input</mat-icon><span>Logout</span></button>\\n</mat-toolbar>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService, \n              private toastr: ToastrService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout()\n    this.toastr.success('You are now logged Out!', '', {timeOut: 3000})\n        this.router.navigate(['/login'])\n        return false\n      }\n  }\n\n","module.exports = \"\"","module.exports = \"\\n<div *ngIf=\\\"user\\\">\\n  <mat-card>\\n  <h2 class=\\\"page-header\\\">Welcome {{user.name}}</h2>\\n  <ul class = \\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n  </ul>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile['user']\n    }, err => {\n      console.log(err);\n      return false\n    })\n  }\n\n}\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  max-width: 600px;\\r\\n  margin: 2em auto;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.signin-content {\\r\\n  padding: 60px 1rem;\\r\\n}\\r\\n\\r\\n.full-width-input {\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<mat-card>\\n<form>\\n<h3>Register</h3>\\n  <div class=\\\"example-container\\\">\\n  <mat-form-field>\\n    <input matInput name=\\\"name\\\" placeholder=\\\"name\\\" [(ngModel)]=\\\"name\\\" ngControl=\\\"name\\\" required>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput name=\\\"username\\\" placeholder=\\\"username\\\" [(ngModel)]=\\\"username\\\" ngControl=\\\"username\\\" required>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput name=\\\"email\\\" placeholder=\\\"email\\\" [(ngModel)]=\\\"email\\\" ngControl=\\\"email\\\" required>\\n  </mat-form-field>\\n\\n <mat-form-field>\\n    <input matInput name=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"password\\\" ngControl=\\\"password\\\" required [type]=\\\"hide ? 'password' : 'text'\\\">\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n  </mat-form-field>\\n  \\n</div>\\n</form>\\n<button mat-button color=\\\"primary\\\" (click)=\\\"onRegisterSubmit()\\\" type=\\\"button\\\">Submit</button>\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {ValidateService} from '../../services/validate.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  password: String;\n  email : String;\n  hide = true;\n\n  constructor(private validateService: ValidateService, \n              private authService: AuthService, \n              private toastr: ToastrService,\n              private router: Router) { }\n\n  ngOnInit() {\n\n  }\n  \n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    // Required Fields\n    if (!this.validateService.validateRegister(user)){\n      this.toastr.error('Please fill in all fields', 'Form Error', {timeOut: 3000})\n      return false;\n    }\n\n    // Validate email\n    if (!this.validateService.validateEmail(user.email)){\n      this.toastr.error('Please use a valid email', 'Form Error', {timeOut: 3000})\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe(data => {\n      if(data['success']){\n        this.toastr.success('You can now login!', 'Registered Successfully', {timeOut: 3000})\n        this.router.navigate(['/login'])\n      }\n      else {\n        this.toastr.error('Please try again!', 'Registration Failed', {timeOut: 3000})\n        this.router.navigate(['/register'])\n      }\n    })\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport {AuthService} from '../Services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService: AuthService, private router:Router){\r\n\r\n    }\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true\r\n        } else {\r\n            this.router.navigate(['/login'])\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport {tokenNotExpired} from 'angular2-jwt'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http:HttpClient) { }\n\n  registerUser(user){\n    let headers = new HttpHeaders({'Content-Type': 'application/json'})\n    return this.http.post(`/users/register`, user, {headers:headers})\n  }\n\n  authenticateUser(user){\n    let headers = new HttpHeaders({'Content-Type': 'application/json'})\n    return this.http.post(`/users/authenticate`, user, {headers:headers})\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token)\n    localStorage.setItem('user', JSON.stringify(user))\n    this.authToken = token;\n    this.user = user;\n  }\n\n  //getPofile(){\n    //let headers = new HttpHeaders();\n    //this.loadToken();\n    //console.log('Bearer '+this.authToken)\n    //headers.set('Authorization', 'Bearer '+ this.authToken).set('Content-Type', 'application/json')\n    //return this.http.get(`${this.url}/users/profile`, {headers:headers})\n  //}\n\n  getProfile(){\n    this.loadToken()\n    let headers = new HttpHeaders({'Content-Type': 'application/json','Authorization': 'Bearer ' + this.authToken})\n    return this.http.get(`/users/profile`, {headers:headers})\n  }\n\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token\n  }\n\n  loggedIn(){\n    return tokenNotExpired('id_token')\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false\n    } else {\n      return true;\n    } \n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n      \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}